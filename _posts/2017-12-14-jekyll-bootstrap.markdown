---
layout: post
title: >-
  llorephie/jekyll-bootstrap, дизайн этого сайта и в целом о моей верстке.
  Осторожно, мат.
date: '2017-12-14 12:10:38 +0300'
categories: web
---

tl;dr - вертел я веб-разработку на детородном органе. Я не веб-разработчик. Я к вебу не имею практически никакого отношения. Я не дизайнер. Я не верстальщик. Я просто девопс, которого каждый раз пытаются привлечь к вёрстке. От которого требуют сделать кошерный дизайн для сайтов. От которого постоянно хотят чтобы было красиво, охуенные шрифты и свистоперделки. Адаптивный (резиновый) дизайн, анимированный фон и прочая ересь.

Так вот - мне срать. Я этого не умею и не хочу этим заниматься. Единственное зачем я полез в веб - интерфейсы для приложений, которые приходится делать, чтобы показывать функционал. В строгом соответствии с w3c-рекомендациями, используя только Bootstrap, не особо думая используя jQuery. Потому что стандарты - едины везде, Bootstrap предоставляет недурное оформление для основных элементов, jQuery позволяет не лезть в дебри JavaScript и использовать его функционал.

И да, меня очень, ОЧЕНЬ бесят выёбывания веб-разработчиков с их вёрсткой таблицами, которую нереально поправить, бесит опиздохуительное количество JavaScript, который дезигнеры так полюбили для отрисовки анимации. Бесит AJAX by-design. Бесит опиздохуительное количество сделанных фреймфорков которые решают одну и ту же сука задачу - показать веб-страницу, и сделать это максимально уёбищным образом. По той же причине меня взбесил WordPress, темы для которого - инфернальное месиво из PHP/HTML кода. Примеры?

```php
<?php
/**
 * The main template file
 *
 * This is the most generic template file in a WordPress theme
 * and one of the two required files for a theme (the other being style.css).
 * It is used to display a page when nothing more specific matches a query.
 * E.g., it puts together the home page when no home.php file exists.
 *
 * @link https://codex.wordpress.org/Template_Hierarchy
 *
 * @package WordPress
 * @subpackage Twenty_Seventeen
 * @since 1.0
 * @version 1.0
 */

get_header(); ?>

<div class="wrap">
    <?php if ( is_home() && ! is_front_page() ) : ?>
        <header class="page-header">
            <h1 class="page-title"><?php single_post_title(); ?></h1>
        </header>
    <?php else : ?>
    <header class="page-header">
        <h2 class="page-title"><?php _e( 'Posts', 'twentyseventeen' ); ?></h2>
    </header>
    <?php endif; ?>

    <div id="primary" class="content-area">
        <main id="main" class="site-main" role="main">

            <?php
            if ( have_posts() ) :

                /* Start the Loop */
                while ( have_posts() ) : the_post();

                    /*
                     * Include the Post-Format-specific template for the content.
                     * If you want to override this in a child theme, then include a file
                     * called content-___.php (where ___ is the Post Format name) and that will be used instead.
                     */
                    get_template_part( 'template-parts/post/content', get_post_format() );

                endwhile;

                the_posts_pagination( array(
                    'prev_text' => twentyseventeen_get_svg( array( 'icon' => 'arrow-left' ) ) . '<span class="screen-reader-text">' . __( 'Previous page', 'twentyseventeen' ) . '</span>',
                    'next_text' => '<span class="screen-reader-text">' . __( 'Next page', 'twentyseventeen' ) . '</span>' . twentyseventeen_get_svg( array( 'icon' => 'arrow-right' ) ),
                    'before_page_number' => '<span class="meta-nav screen-reader-text">' . __( 'Page', 'twentyseventeen' ) . ' </span>',
                ) );

            else :

                get_template_part( 'template-parts/post/content', 'none' );

            endif;
            ?>

        </main><!-- #main -->
    </div><!-- #primary -->
    <?php get_sidebar(); ?>
</div><!-- .wrap -->

<?php get_footer();
```

Стандартная тема WordPress. Ни намёка на гайдлайны. Для справки - на WordPress работают, эээ... 74% сайтов в интернете, согласно вот [этим данным](https://www.wappalyzer.com/categories/cms). До кучи - сотни тем, тысячи плагинов, [тысячи _публичных_ уязвимостей](https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=wordpress). Фыр, однако.

И множество других изъёбов веб-разработки. Почему я и искал способ делать что-либо для веба с минимальным привлечением фреймворков и бекенд-обработчиков. Раньше это было использование HTML + SSI (Server-side includes, псевдодинамическое содержимое используя внутренние средства вебсервера), но многостраничные сайты рано или поздно превращаются в месиво, за которым становится сложно следить. Сейчас глаз упал на генератор статических сайтов Jekyll. Формат страниц - HTML или Markdown, что довольно таки удобно. Но и с ним возникла проблема - я привык к удобству оформления средствами Bootstrap, здесь последней его версии не нашлось. Пришлось погружаться в ~~бездну анального угнетения~~ особенности шаблонизации Jekyll и [особенности разработки тем для него для работы с GitHub](https://github.com/llorephie/llorephie.github.io/commits/master).
Получилось, в целом, недурно, на мой взгляд - валидная вёрстка w3c, никакой дополнительной обработки сервером - весь сайт собирается в статичное дерево каталогов с нужными страницами. И никакой дополнительной головной боли с вёрсткой при создании новых постов. Ну и резервирование на GitHub/GitLab, конечно же.

#### jekyll-bootstrap
Как упомянуто выше - я не веб-разработчик, и проще всего мне работать с фреймворком Bootstrap. В основном репозитории темы я буду вносить правки чтобы сделать тему наиболее универсальной для всех страждущих без лишней мороки сделать простой блог с нормальным оформлением. Или простой сайт с приемлимым оформлением и с простотой редактирования контента. Тема будет пополняться только в соответствии с гайдлайнами Bootstrap, w3c, OpenGraph (куда нынче без него в эпоху социальных сетей) и AuthorMeta. Коррективы приветствуются.

#### А теперь ещё раз для тех, кто захочет меня привлечь к разработке сайтов
Я не веб-разработчик. Я системный администратор, DevOps, системный программист, но я **не занимаюсь** веб-дизайном. И не буду им заниматься в обозримом будущем.
* Я могу дать рекомендации по тому как что-то сделать на CSS3 вместо JS. Или послать нахуй. Или послать в DuckDuckGo. В зависимости от настроения.
* Я могу подсказать как реализовать что-то без привлечения бекенда.
* Я могу сделать максимально примитивный прототип для сайта. Как это например сделано на [Guild Black Templars](https://guild-bt.ru).
* Я могу сделать функциональный веб-интерфейс под конкретную задачу или для работы с конкретным API. Например, [monitoring-dash](https://github.com/llorephie/monitoring-dash).
* Впринципе, я могу сверстать максимально простую посадочную страницу для проекта или компании, которой нужно чтобы на сайте были просто контакты.
Но могу и буду этим заниматься - в разных вселенных. Я вас скорее всего пошлю нахуй при попытке мне навязать как делать надо, как вы хотите видеть, и чтобы это сделал в итоге я. Веб - способ для представления данных в удобном для чтения формате. Если нечто, что вы хотите предоставить своим пользователям, надлежащего качества - простой веб-страницы с инструкциями для использования будет более чем достаточно. Если вам нужно продать своим пользователям говно и пустить пыль в глаза целевой аудитории - идите нахуй, и не отсвечивайте.

> Пост оформлен по просьбе Hel_ISR с проекта Guild Black Templars - тыкать всех долбоёбов можно сюда.
